name: 'ci'

on:
  push:
    branches: [ 'development' ]
  pull_request:
    types: [ opened, edited, reopened, synchronize, review_requested ]
    branches: [ 'development' ]
  workflow_call:

env:
  TAG_PREFIX: 'v'

jobs:
  BuildAndUnitTests:
    runs-on: ubuntu-latest # Lưu ý: lúc build có thể dùng public runner cho nhanh
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up DotNet SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-build --configuration Release

  BuildAndPushDockerImage:
    needs: [ BuildAndUnitTests ]
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest # Lưu ý: lúc build có thể dùng public runner cho nhanh
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.set_docker_image.outputs.DOCKER_IMAGE_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get current date and commit hash
        id: vars
        run: |
          echo "CURRENT_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/izota-dummy:dev-${{ env.CURRENT_DATE }}-${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/izota-dummy:dev-${{ env.CURRENT_DATE }}
          file: ./Dockerfile
          context: ./
      - name: Set output docker image
        id: set_docker_image
        run: |
          echo "DOCKER_IMAGE_TAG=dev-${{ env.CURRENT_DATE }}-${{ github.sha }}" >> "$GITHUB_OUTPUT"


  DeployToDev:
    needs: [ BuildAndPushDockerImage ]
    if: github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    steps:
      - name: Dummy
        run: |
          echo "VERSION=${{ needs.ReleaseDryRun.outputs.VERSION }}"
          echo "RELEASE_NOTES=${{ needs.ReleaseDryRun.outputs.RELEASE_NOTES }}"
          echo "DOCKER_IMAGE_TAG=${{ needs.BuildAndPushDockerImage.outputs.DOCKER_IMAGE_TAG }}"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Replace docker image in file deployment
        run: |
          sed -i 's|DOCKER_IMAGE_FRONTEND|${{ secrets.DOCKER_USERNAME }}/izota-dummy:${{ needs.BuildAndPushDockerImage.outputs.DOCKER_IMAGE_TAG }}|g' deployments/frontend/deployment.yaml
          sed -i 's|DOCKER_IMAGE_FRONTEND|${{ secrets.DOCKER_USERNAME }}/izota-dummy:${{ needs.BuildAndPushDockerImage.outputs.DOCKER_IMAGE_TAG }}|g' deployments/frontend/deployment-frontend-2.yaml
          sed -i 's|DOCKER_IMAGE_BACKEND|${{ secrets.DOCKER_USERNAME }}/izota-dummy:${{ needs.BuildAndPushDockerImage.outputs.DOCKER_IMAGE_TAG }}|g' deployments/backend/deployment.yaml
      - name: Deploy Frontend
        run: |
          cat deployments/frontend/deployment.yaml
      - name: Deploy Frontend 2
        run: |
          cat deployments/frontend/deployment-frontend-2.yaml
      - name: Deploy Backend
        run: |
          cat deployments/backend/deployment.yaml